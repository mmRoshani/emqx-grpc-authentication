%% -*- mode: erlang -*-
{deps,
    [ %% not all plugins have to depend on emqx
      %% but if they do, use git_subdir in the default profile
      {emqx, {git_subdir, "git@github.com:emqx/emqx.git", {tag, "v5.1.6"}, "apps/emqx"}}
    , {emqx_ctl, {git_subdir, "git@github.com:emqx/emqx.git", {tag, "v5.1.6"}, "apps/emqx_ctl"}}
    , {emqx_utils, {git_subdir, "git@github.com:emqx/emqx.git", {tag, "v5.1.6"}, "apps/emqx_utils"}}
    , {emqx_durable_storage, {git_subdir, "git@github.com:emqx/emqx.git", {tag, "v5.1.6"}, "apps/emqx_durable_storage"}}
      %% this is my plugin's dependency
    , {map_sets, "1.1.0"}
    , {gpb, "~> 4.11"}
    , {gproc, "0.8.0"}
    , {cowboy, {git, "https://github.com/emqx/cowboy", {tag, "2.9.0"}}}
    , {gun, {git, "https://github.com/emqx/gun", {tag, "1.3.7"}}}
    , {grpc, {git, "https://github.com/emqx/grpc", {branch, "master"}}}
    ]}.


{plugins, [
    {emqx_plugrel, {git, "git@github.com:emqx/emqx_plugrel.git", {tag, "0.3.0"}}}
    , {grpc_plugin, {git, "https://github.com/HJianBo/grpc_plugin", {tag, "v0.10.2"}}}
]}.

{grpc,
  [ {type, all}
    , {protos, ["priv/"]}
    , {out_dir, "src/"}
    , {gpb_opts, [{module_name_prefix, "grpc_"},
    {module_name_suffix, "_pb"}]}
  ]}.

{provider_hooks,
  [{pre, [{compile, {grpc, gen}},
    {clean, {grpc, clean}}]}
  ]}.

{erl_opts, [debug_info]}.

{relx, [ {release, {emqx_grpc_authentication, "0.0.1"},
            [ emqx_grpc_authentication
            , map_sets
            ]}
       , {dev_mode, false}
       , {include_erts, false}
       ]}.

%% Additional info of the plugin
{emqx_plugrel,
    [ {authors, ["MohammadMojatabRoshani"]}
    , {builder,
        [ {name, "MohammadMojatabRoshani"}
        , {contact, "mohammadmojtabaroshani@outlook.com"}
        , {website, "https://github.com/mmRoshani"}
        ]}
    , {repo, "https://github.com/mmRoshani/emqx-grpc-authentication"}
    , {functionality, ["Demo"]}
    , {compatibility,
        [ {emqx, "~> 5.0"}
        ]}
    , {description, "emqx plugin that handle authentication with gRPC"}
    ]
}.

{xref_checks,[undefined_function_calls,undefined_functions,locals_not_used,
              deprecated_function_calls,warnings_as_errors,deprecated_functions]}.

{xref_ignores, [grpc_health_pb,grpc_reflection_pb,
  grpc_greeter_pb,grpc_route_guide_pb]}.

{profiles,
  [{test,
    [{cover_enabled, true},
      {cover_opts, [verbose]},
      {cover_excl_mods, [grpc_health_pb,grpc_health_v_1_health_client,
        grpc_health_v_1_health_bhvr,
        grpc_reflection_pb,
        grpc_reflection_v_1alpha_server_reflection_client,
        grpc_reflection_v_1alpha_server_reflection_bhvr,
        grpc_route_guide_pb,routeguide_route_guide_bhvr,
        routeguide_route_guide_client,
        ct_greeter_pb,greeter_bhvr,greeter_client]},
      {grpc,
        [{type, all},
          {protos, ["priv/", "test/"]},
          {out_dir, "test/"},
          {gpb_opts, [{module_name_prefix, "grpc_"},
            {module_name_suffix, "_pb"}]}
        ]}
    ]}]}.
